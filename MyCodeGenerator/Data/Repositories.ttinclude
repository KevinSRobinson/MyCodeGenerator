
<#+ 

  void GenerateRespositories(string path, string targetNamespace, string className, string efContext){			
		#>
		using System;
		using System.Collections.Generic;
		using System.Linq;
		using <#=targetNamespace#>;
public class <#= className #>Repository : Repository<<#= className #>>, I<#= className #>Repository
{
    private <#= efContext #> _context;

    public <#= className #>Repository(<#= efContext #> context) : base(context)
    {
        _context = context;
    }

	public IEnumerable<<#= className #>> GetByUserId(Guid userId)
    {
        return _context.<#= className #>s.Where(x => x.UserId == userId);
    }
   
}
public interface I<#= className #>Repository : IRepository<<#= className #>>
{
    IEnumerable<<#= className #>> GetByUserId(Guid userId);
}

		<#+


	 CreateDirectoryFullPath(path + "/Data/Repositories");
	  CreateFile(path + "/Data/Repositories/" + className + "Repository.cs");
	}	
#>