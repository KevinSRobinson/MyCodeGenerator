
<#+ 

    private string GetRequestToObjectMapping(CodeClassHelper helper){
        var properties = "";
		foreach (CodeElement meb in helper.CodeClass.Members) {
		if (meb.Kind == vsCMElement.vsCMElementProperty) {
			var prop = meb as CodeProperty;
				var type = prop.Type.AsString;
                properties  += meb.Name  + ": req.body." + meb.Name + ",";
				
			};			
		}; 
        //remove last commma
        properties = properties.Substring(0, properties.Length -1);
        return properties;        
    }

    void GenerateApisDataControllers(CodeClassHelper helper){#>

    
    var <#=helper.Name#> = require('../Models/<#=helper.CamelCasePlural#>Model.js');

    exports.create = function (req, res) {
        var entry = new <#=helper.Name#>({
            
            <#+WriteLine(GetRequestToObjectMapping(helper));#>          

            
        });

        entry.save();

        res.redirect(301, '/');
    };


    exports.list = function (req, res) { 
         var query = Organisation.find({}).then(function (results) {
         res.json({data: results});
    });


    };



    exports.get = function (req, res) { 
        res.render('newnote', { title: 'Standup - New Note'});
    };

 

<#+
    CreateDirectoryFullPath(NodeApiDataControllersPath);
    CreateFile(NodeApiDataControllersPath + helper.CamelCasePlural + ".Server.Controller.js");
	}	
#>